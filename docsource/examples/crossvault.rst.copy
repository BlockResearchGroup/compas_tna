================================================================================
The cross vault
================================================================================

.. figure:: /_images/crossvault.png
    :figclass: figure
    :class: figure-img img-fluid


**Downloads**

* :download:`crossvault.py <crossvault.py>`
* :download:`crossvault.3dm <crossvault.3dm>`


Make the form diagram
---------------------

The first step is to make a form diagram from a set of connected lines.
Make sure the lines are individual line segments and properly connected.
Alternatively, the form diagram can be created from an OBJ file, from a JSON file,
from a Rhino mesh, or a Rhino surface.

.. figure:: /_images/TNA_form.png
    :figclass: figure
    :class: figure-img img-fluid

.. literalinclude:: crossvault.py
    :language: python
    :lines: 66-71


Identify the supports
---------------------

After initialising the form diagram, we identify the supports.
The identify the supports, we select the relevant vertices and change their attribute
``is_anchor`` to ``True``.

.. literalinclude:: crossvault.py
    :language: python
    :lines: 73-79


Update the boundary conditions
------------------------------

Having identified the supports, we update the boundary conditions.
To update the boundary conditions, we add "feet" to the support vertices.

There are two options.
We can add one "foot" per support or two.
The feet represent the horizontal components of the reaction forces at the supports.
If only foot is added, the reaction force at that support is fully constrained to the direction of the foot.
If two feet are added, the horizontal component of the reaction force can be any combination of those two force vectors.

.. literalinclude:: crossvault.py
    :language: python
    :lines: 81-86


Make the force diagram
----------------------

Once the boundary conditions are set, we can make the force diagram.

.. literalinclude:: crossvault.py
    :language: python
    :lines: 88-96


Set the constraints
-------------------

This is the most important part of the procedure that ensures we end up with a barrel vault.
A barrel vault is a single curvature geometry and therefore carries loads in only one direction.

This means we have to constrain the relationship between form and force diagram
to only allow forces in one direction. and to make sure that the forces are equally
distributed over the single-span arches.

First, set the constraints for the edges in the directions spanning the ribs.
Set ``fmin := 2`` and ``fmax := 2``.

.. literalinclude:: crossvault.py
    :language: python
    :lines: 106-115

Then the edges on the boundary.
Set ``fmin := 0`` and ``fmax := 0``.

.. literalinclude:: crossvault.py
    :language: python
    :lines: 117-126

Then the edges perpendicular to the boundary.
Set ``fmin := 0`` and ``fmax := 0``.

.. literalinclude:: crossvault.py
    :language: python
    :lines: 139-148

Finally, the edges of the cross in the middle.
Set ``fmin := 2``.

.. literalinclude:: crossvault.py
    :language: python
    :lines: 128-137


Horizontal equilibrium
----------------------

.. literalinclude:: crossvault.py
    :language: python
    :lines: 150-161


Vertical equilibrium
--------------------

.. literalinclude:: crossvault.py
    :language: python
    :lines: 163-168


Visualise the result
--------------------

.. literalinclude:: crossvault.py
    :language: python
    :lines: 170-179
